//
//  IconsStyleKit.swift
//  Autocomplete
//
//  Created by Timothy P Miller on 4/28/15.
//  Copyright (c) 2015 Timothy P Miller. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class IconsStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static var imageOfCanvas2: UIImage?
        static var canvas2Targets: [AnyObject]?
        static var imageOfCanvas4: UIImage?
        static var canvas4Targets: [AnyObject]?
    }

    //// Drawing Methods

    public class func drawCanvas2() {

        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(0.5, 27.5))
        bezierPath.addLineToPoint(CGPointMake(5.5, 27.5))
        bezierPath.addLineToPoint(CGPointMake(5.5, 18.5))
        bezierPath.addLineToPoint(CGPointMake(9.5, 18.5))
        bezierPath.addLineToPoint(CGPointMake(9.5, 27.5))
        bezierPath.addLineToPoint(CGPointMake(9.5, 27.5))
        bezierPath.addLineToPoint(CGPointMake(9.5, 6.5))
        bezierPath.addLineToPoint(CGPointMake(14.5, 6.5))
        bezierPath.addLineToPoint(CGPointMake(14.5, 27.5))
        bezierPath.addLineToPoint(CGPointMake(20.5, 27.5))
        bezierPath.addLineToPoint(CGPointMake(20.5, 12.5))
        bezierPath.addLineToPoint(CGPointMake(24.5, 12.5))
        bezierPath.addLineToPoint(CGPointMake(24.5, 27.5))
        bezierPath.addLineToPoint(CGPointMake(27.5, 4.5))
        bezierPath.addLineToPoint(CGPointMake(29.5, 27.5))
        bezierPath.addLineToPoint(CGPointMake(34.5, 27.5))
        bezierPath.addLineToPoint(CGPointMake(34.5, 27.5))
        UIColor.blackColor().setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()
    }

    public class func drawCanvas4() {

        //// Bezier 2 Drawing
        let bezier2Path = UIBezierPath()
        bezier2Path.moveToPoint(CGPointMake(0.5, 2.5))
        bezier2Path.addCurveToPoint(CGPointMake(33.5, 2.5), controlPoint1: CGPointMake(33.5, 2.5), controlPoint2: CGPointMake(33.5, 2.5))
        UIColor.blackColor().setStroke()
        bezier2Path.lineWidth = 1
        bezier2Path.stroke()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.moveToPoint(CGPointMake(0.5, 31.5))
        bezierPath.addCurveToPoint(CGPointMake(33.5, 31.5), controlPoint1: CGPointMake(33.5, 31.5), controlPoint2: CGPointMake(33.5, 31.5))
        UIColor.blackColor().setStroke()
        bezierPath.lineWidth = 1
        bezierPath.stroke()


        //// Group
        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalInRect: CGRectMake(15.5, 4.5, 18, 25))
        UIColor.blackColor().setStroke()
        ovalPath.lineWidth = 1
        ovalPath.stroke()


        //// Oval 2 Drawing
        let oval2Path = UIBezierPath(ovalInRect: CGRectMake(20.5, 8.5, 8, 10))
        UIColor.blackColor().setStroke()
        oval2Path.lineWidth = 1
        oval2Path.stroke()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.moveToPoint(CGPointMake(21.93, 17.66))
        bezier3Path.addCurveToPoint(CGPointMake(16.79, 22.92), controlPoint1: CGPointMake(16.79, 22.92), controlPoint2: CGPointMake(16.79, 22.92))
        UIColor.blackColor().setStroke()
        bezier3Path.lineWidth = 1
        bezier3Path.stroke()


        //// Bezier 4 Drawing
        let bezier4Path = UIBezierPath()
        bezier4Path.moveToPoint(CGPointMake(28.36, 18.97))
        bezier4Path.addCurveToPoint(CGPointMake(30.93, 24.24), controlPoint1: CGPointMake(30.93, 24.24), controlPoint2: CGPointMake(30.93, 24.24))
        UIColor.blackColor().setStroke()
        bezier4Path.lineWidth = 1
        bezier4Path.stroke()




        //// Star Drawing
        let starPath = UIBezierPath()
        starPath.moveToPoint(CGPointMake(5.5, 13.25))
        starPath.addLineToPoint(CGPointMake(7.35, 15.95))
        starPath.addLineToPoint(CGPointMake(10.49, 16.88))
        starPath.addLineToPoint(CGPointMake(8.5, 19.47))
        starPath.addLineToPoint(CGPointMake(8.59, 22.75))
        starPath.addLineToPoint(CGPointMake(5.5, 21.65))
        starPath.addLineToPoint(CGPointMake(2.41, 22.75))
        starPath.addLineToPoint(CGPointMake(2.5, 19.47))
        starPath.addLineToPoint(CGPointMake(0.51, 16.88))
        starPath.addLineToPoint(CGPointMake(3.65, 15.95))
        starPath.closePath()
        UIColor.blackColor().setStroke()
        starPath.lineWidth = 1
        starPath.stroke()
    }

    //// Generated Images

    public class var imageOfCanvas2: UIImage {
        if Cache.imageOfCanvas2 != nil {
            return Cache.imageOfCanvas2!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(34, 34), false, 0)
            IconsStyleKit.drawCanvas2()

        Cache.imageOfCanvas2 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvas2!
    }

    public class var imageOfCanvas4: UIImage {
        if Cache.imageOfCanvas4 != nil {
            return Cache.imageOfCanvas4!
        }

        UIGraphicsBeginImageContextWithOptions(CGSizeMake(34, 34), false, 0)
            IconsStyleKit.drawCanvas4()

        Cache.imageOfCanvas4 = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()

        return Cache.imageOfCanvas4!
    }

    //// Customization Infrastructure

    @IBOutlet var canvas2Targets: [AnyObject]! {
        get { return Cache.canvas2Targets }
        set {
            Cache.canvas2Targets = newValue
            for target: AnyObject in newValue {
                target.setImage(IconsStyleKit.imageOfCanvas2)
            }
        }
    }

    @IBOutlet var canvas4Targets: [AnyObject]! {
        get { return Cache.canvas4Targets }
        set {
            Cache.canvas4Targets = newValue
            for target: AnyObject in newValue {
                target.setImage(IconsStyleKit.imageOfCanvas4)
            }
        }
    }

}

@objc protocol StyleKitSettableImage {
    func setImage(image: UIImage!)
}

@objc protocol StyleKitSettableSelectedImage {
    func setSelectedImage(image: UIImage!)
}
